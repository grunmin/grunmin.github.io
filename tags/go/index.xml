<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on Don&#39;t Panic</title>
    <link>/tags/go/</link>
    <description>Recent content in Go on Don&#39;t Panic</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 20 Jul 2018 10:52:48 +0800</lastBuildDate>
    
	<atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go的依赖管理工具</title>
      <link>/2018/07/go%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Fri, 20 Jul 2018 10:52:48 +0800</pubDate>
      
      <guid>/2018/07/go%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/</guid>
      <description>&lt;p&gt;go语言与js和python类似, 依靠社区来丰富自己的组件库, 各种第三方库遍地开花. 因为go还是一门相当年轻的语言, 特性和接口还在不断更新, 加上社区活跃程度高, 就出现了这样的场景: 新的第三方库不断增加, 旧有的库的特性和接口也频繁变更.(这一点跟目前js社区一片热火朝天的景象很类似)&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go中数组和切片的声明方式</title>
      <link>/2018/07/go%E4%B8%AD%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87%E7%9A%84%E5%A3%B0%E6%98%8E%E6%96%B9%E5%BC%8F/</link>
      <pubDate>Thu, 19 Jul 2018 07:32:26 +0800</pubDate>
      
      <guid>/2018/07/go%E4%B8%AD%E6%95%B0%E7%BB%84%E5%92%8C%E5%88%87%E7%89%87%E7%9A%84%E5%A3%B0%E6%98%8E%E6%96%B9%E5%BC%8F/</guid>
      <description>&lt;p&gt;在go中, 数组和切片是两种不同的数据类型, 这两种类型表现类似, 声明方法也只存在细微差异&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go中的包和python中的模块</title>
      <link>/2018/05/go%E4%B8%AD%E7%9A%84%E5%8C%85%E5%92%8Cpython%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97/</link>
      <pubDate>Sun, 27 May 2018 10:53:05 +0800</pubDate>
      
      <guid>/2018/05/go%E4%B8%AD%E7%9A%84%E5%8C%85%E5%92%8Cpython%E4%B8%AD%E7%9A%84%E6%A8%A1%E5%9D%97/</guid>
      <description>&lt;p&gt;在python中， 程序由模块组成， 一个文件就是一个模块.&lt;/p&gt;

&lt;p&gt;在go中, 程序是由包组成, 一个目录是一个包, 弱化单一文件的概念. 在同一个包内, 包级变量和函数在哪里声明都一样. 对于python开发者而言， go中的一个包都可以视为python的一个文件.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go中slice编码为JSON</title>
      <link>/2018/05/go%E4%B8%ADslice%E7%BC%96%E7%A0%81%E4%B8%BAjson/</link>
      <pubDate>Sun, 27 May 2018 09:58:01 +0800</pubDate>
      
      <guid>/2018/05/go%E4%B8%ADslice%E7%BC%96%E7%A0%81%E4%B8%BAjson/</guid>
      <description>&lt;p&gt;考虑如下场景:
用户调用API获取文章列表, 服务端返回的格式是JSON&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Go入门指引</title>
      <link>/2018/05/go%E5%85%A5%E9%97%A8%E6%8C%87%E5%BC%95/</link>
      <pubDate>Sat, 26 May 2018 19:59:04 +0800</pubDate>
      
      <guid>/2018/05/go%E5%85%A5%E9%97%A8%E6%8C%87%E5%BC%95/</guid>
      <description>&lt;p&gt;python语言被称为&amp;rdquo;自带电池&amp;rdquo;, 意思是有现成好用的标准库和第三方模块提供了大量常用功能的封装, 只需导入并调用就能实现在其他语言中需要大量编码的功能.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>